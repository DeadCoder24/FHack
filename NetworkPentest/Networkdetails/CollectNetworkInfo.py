
try:
    from NetworkPentest.Utility.IpCreator import CreateIp
    from src.Colors import TextColor
    import socket as sock
    from Config.RecOS import IsOSDarwin, IsOSLinux
    from os import getcwd
    import subprocess
except Exception as error:
    raise SystemExit, '\033[31m' + '%s' % error + '\033[0m'

define_UTIL_PackagePath = getcwd() + "/NetworkPentest/Utility"


def MASK():
    print TextColor.GREEN + """
             _   _      _                      _
            | \ | | ___| |___      _____  _ __| | __
            |  \| |/ _ \ __\ \ /\ / / _ \| '__| |/ /
            | |\  |  __/ |_ \ V  V / (_) | |  |   < 
            |_| \_|\___|\__| \_/\_/ \___/|_|  |_|\_\\
                                                    
             ____  _                                   
            |  _ \(_)___  ___ _____   _____ _ __ _   _ 
            | | | | / __|/ __/ _ \ \ / / _ \ '__| | | |
            | |_| | \__ \ (_| (_) \ V /  __/ |  | |_| |
            |____/|_|___/\___\___/ \_/ \___|_|   \__, |
                                                 |___/ 
                                                 
    """ + TextColor.WHITE

    print TextColor.WARNING + "\t\t Your private IP is: "
    print

    if IsOSLinux():
        command = [define_UTIL_PackagePath + '/GetIpInterf.out']
        process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        result = process.communicate()[0]

    elif IsOSDarwin():
        command = [define_UTIL_PackagePath + '/GetIpInterf']
        process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        result = process.communicate()[0]

    print result + TextColor.WHITE
    print


def UseIPCreator():
    ip = raw_input(TextColor.CBLUE + "\t~ Fhack/# Enter ip range e.g:(192.168.1.1-192.168.1.100): " + TextColor.WHITE)

    print

    try:

        ipList = list()
        for item in CreateIp(ip):
            ipList.append(item)

        # todo = now we must send created ips to the thread pool and check them

        for item in CreateIp(ip):
            process = subprocess.Popen(["ping", "-c", '1', '-t', '1', str(item)],
                                       stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            out, error = process.communicate()

            if '1 packets received' in out:
                print 'Host is online [%s]' % item
            elif '100.0% packet loss' in out:
                print 'not live ' + item

    except Exception:
        print

    print


def UseIPCalculator():
    """
    With this function we create range of IPs with net mask calculation
    :return:
    """
    pass


def CollectNetworkInfo():
    MASK()

    print TextColor.CYAN + "\t\t [1] Use IPCreator for range of IP"
    print "\t\t [2] Use NetMask for IP Calculator"
    print "\t\t [3] Use single IP"
    print '\t\t [0] Exit' + TextColor.WHITE
    print

    selectedItem = raw_input(TextColor.CVIOLET + '~ Fhack/# Selecte item: ' + TextColor.WHITE)

    if selectedItem == '1':
        UseIPCreator()
    elif selectedItem == '2':
        pass
    elif selectedItem == '3':
        pass
    elif selectedItem == '0':
        print
        return
    else:
        print TextColor.RED + '[-] Please select item <0-3>' + TextColor.WHITE
